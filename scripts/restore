#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

current_os=`lowercase \`uname -s\``
current_mach=`uname -m`
if [ ${current_mach} = "armv6l" ]
then
 current_mach="armv7l"
fi

#from 2023.1~ynh1
#End of support for mosquitto. However, we still keep trace of if it was installed in order to be able to back it up and remove it correctly
mosquitto=$(ynh_app_setting_get --app=$app --key=mosquitto)
if [[ -z "${mosquitto+x}" ]]; then
	if [[ "$mqtt_domain"="$domain" ]]; then
		ynh_app_setting_set --app="$app" --key=mosquitto --value=0
	else
		ynh_print_warn --message="If you didn't already do it, you should migrate to mosquitto package outside of the app as it will soon not be maintained anymore"
		ynh_app_setting_set --app="$app" --key=mosquitto --value=1
	fi
fi

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
#As we are downloading compiled binaries for each system, we have to check if the restore occurs
#on the same system type. If we are restoring on another system type it won't work and in that
#case we must go through a reinstall process.
test "$OS" = "$current_os" \
	|| ynh_die --message="Cannot restore : previous OS is $OS, current OS is $current_os, please reinstall"
test "$mach" = "$current_mach" \
	|| ynh_die --message="Cannot restore : previous machine type is $mach, current machine type is $current_mach, please reinstall"

ynh_app_setting_set --app="$app" --key=OS --value="$current_os"
ynh_app_setting_set --app="$app" --key=mach --value="$current_mach"

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX web server configuration..."

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"
ynh_restore_file --origin_path="/etc/nginx/conf.d/"$domain".d/api_"$app".conf"
[[ "$mosquitto" = 1 ]] && ynh_restore_file --origin_path="/etc/nginx/conf.d/$mqtt_domain.d/mqtt_$app.conf" --not_mandatory

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
#allow user to access USB / serial port to communicate with tools (RFXtrx, Z-wave dongle, etc.) & i2c bus
if grep dialout -q < /etc/group; then
	usermod -a -G dialout "$app"
fi
if grep i2c -q < /etc/group; then
	usermod -a -G i2c "$app"
fi
if grep gpio -q < /etc/group; then
	usermod -a -G gpio "$app"
fi

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=5

ynh_restore_file --origin_path="$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app":"$app" "$install_dir"

#=================================================
# SET MOSQUITTO SETTINGS
#=================================================
if [ "$mosquitto" = 1 ]; then
	ynh_script_progression --message="Reinstalling up mosquitto..." --weight=5
	ynh_print_warn --message="If you didn't already do it, you should migrate to mosquitto package outside of the app as it will soon not be maintained anymore"
	ynh_restore_file --origin_path="/etc/mosquitto/conf.d" --not_mandatory
fi

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..." --weight=3

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable "$app".service --quiet

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add "$app" --description="Domotique open sources" --log="/var/log/$app/$app.log"
[[ "$mosquitto" = 1 ]] && yunohost service add mosquitto --description="Serveur MQTT pour domoticz" --log="/var/log/mosquitto/mosquitto.log"


#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#Restarting mosquitto to take changes into account
[[ "$mosquitto" = 1 ]] && ynh_systemd_action --service_name=mosquitto --action="restart"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the logrotate configuration..."

mkdir -p /var/log/"$app"
chown -R domoticz: /var/log/"$app"

ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# RESTORE VARIOUS FILES
#=================================================
ynh_script_progression --message="Restoring various files..."

ynh_restore_file --origin_path="/usr/share/yunohost/hooks/conf_regen/95-nginx_domoticz"
#yunohost tools regen-conf postfix

#=================================================
# RESTORE THE FAIL2BAN CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the Fail2Ban configuration..." --weight=7

ynh_restore_file --origin_path="/etc/fail2ban/jail.d/$app.conf"
ynh_restore_file --origin_path="/etc/fail2ban/filter.d/$app.conf"

log_file=/var/log/$app/$app.log
if [ ! -f "$log_file" ]; then
	touch "$log_file"
	chown $app: "$log_file"
fi

ynh_systemd_action --action=restart --service_name=fail2ban

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=3

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
